import React, { useMemo } from 'react';
import { createTheme, ThemeProvider, useMediaQuery } from '@mui/material';
/** @deprecated Use either `DockerMuiV5ThemeProvider` or `DockerMuiV6ThemeProvider` */
export const DockerMuiThemeProvider = DockerMuiV5ThemeProvider;
export function DockerMuiV5ThemeProvider({ children, noSsr = true }) {
    const useDarkTheme = useMediaQuery('(prefers-color-scheme: dark)', { noSsr });
    const themeOptionsBag = window.__ddMuiV5Themes;
    const themeOptions = themeOptionsBag[useDarkTheme ? 'dark' : 'light'];
    const theme = useMemo(() => createTheme(themeOptions), [themeOptions]);
    const params = new URLSearchParams(window.location.search);
    if (params.get('dialog') === 'true') {
        theme.palette.background.default = theme.palette.background.paper;
    }
    return React.createElement(ThemeProvider, { theme: theme }, children);
}
export function DockerMuiV6ThemeProvider({ children, noSsr = true }) {
    const useDarkTheme = useMediaQuery('(prefers-color-scheme: dark)', { noSsr });
    const themeOptionsBag = window.__ddMuiV6Themes;
    const themeOptions = themeOptionsBag[useDarkTheme ? 'dark' : 'light'];
    const theme = useMemo(() => createTheme(themeOptions), [themeOptions]);
    const params = new URLSearchParams(window.location.search);
    if (params.get('dialog') === 'true') {
        theme.palette.background.default = theme.palette.background.paper;
    }
    return React.createElement(ThemeProvider, { theme: theme }, children);
}
